{
  "address": "0x5Ae2d36f1A6E23C7776F740C712F10a440e0Ce52",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "FeeToIsZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "FileError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "FileNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyInContextOfUpload",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "FileAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "FileRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "approveUploader",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        }
      ],
      "name": "download",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFiles",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dateUploaded",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "downloadCount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "uploader",
              "type": "address"
            }
          ],
          "internalType": "struct IDRythm.Data[]",
          "name": "_return",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isContextOf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        }
      ],
      "name": "removeFile",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_return",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "removeUploader",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "removalFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "uploadFee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        }
      ],
      "name": "upload",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x00b1502e365dadedc630e17bd136ba1e557dc6c08581cff5538d9d7badb1c270",
  "receipt": {
    "to": null,
    "from": "0xe29D321FB47c03e3b3aab3fF1AB78b344F9De3cD",
    "contractAddress": "0x5Ae2d36f1A6E23C7776F740C712F10a440e0Ce52",
    "transactionIndex": 18,
    "gasUsed": "1515625",
    "logsBloom": "0x
    "blockHash": "0x19ab602bfcb60dd88702ad0e5aceb5ce87839f193ef00d5354569a900b8c700b",
    "transactionHash": "0x00b1502e365dadedc630e17bd136ba1e557dc6c08581cff5538d9d7badb1c270",
    "logs": [
      {
        "transactionIndex": 18,
        "blockNumber": 29466674,
        "transactionHash": "0x00b1502e365dadedc630e17bd136ba1e557dc6c08581cff5538d9d7badb1c270",
        "address": "0x5Ae2d36f1A6E23C7776F740C712F10a440e0Ce52",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e29d321fb47c03e3b3aab3ff1ab78b344f9de3cd"
        ],
        "data": "0x000000000000000000000000000000000000000000295be96e64066972000000",
        "logIndex": 66,
        "blockHash": "0x19ab602bfcb60dd88702ad0e5aceb5ce87839f193ef00d5354569a900b8c700b"
      },
      {
        "transactionIndex": 18,
        "blockNumber": 29466674,
        "transactionHash": "0x00b1502e365dadedc630e17bd136ba1e557dc6c08581cff5538d9d7badb1c270",
        "address": "0x5Ae2d36f1A6E23C7776F740C712F10a440e0Ce52",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e29d321fb47c03e3b3aab3ff1ab78b344f9de3cd"
        ],
        "data": "0x",
        "logIndex": 67,
        "blockHash": "0x19ab602bfcb60dd88702ad0e5aceb5ce87839f193ef00d5354569a900b8c700b"
      },
      {
        "transactionIndex": 18,
        "blockNumber": 29466674,
        "transactionHash": "0x00b1502e365dadedc630e17bd136ba1e557dc6c08581cff5538d9d7badb1c270",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e29d321fb47c03e3b3aab3ff1ab78b344f9de3cd",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000813adea9b470000000000000000000000000000000000000000000000000011ac5697bfd047c90000000000000000000000000000000000000000000017ff1f16b6cc219c978d00000000000000000000000000000000000000000000000011a442e9d53500c90000000000000000000000000000000000000000000017ff1f1eca7a0c37de8d",
        "logIndex": 68,
        "blockHash": "0x19ab602bfcb60dd88702ad0e5aceb5ce87839f193ef00d5354569a900b8c700b"
      }
    ],
    "blockNumber": 29466674,
    "cumulativeGasUsed": "3438009",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA7B2387bF4C259e188751B46859fcA7E2043FEFD"
  ],
  "numDeployments": 1,
  "solcInputHash": "6e6b1214181539cdec23e58a790b1823",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"FeeToIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"FileError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"FileNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyInContextOfUpload\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"FileAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"FileRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"approveUploader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"}],\"name\":\"download\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFiles\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dateUploaded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"downloadCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"}],\"internalType\":\"struct IDRythm.Data[]\",\"name\":\"_return\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isContextOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"}],\"name\":\"removeFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_return\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"removeUploader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"removalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uploadFee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"}],\"name\":\"upload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"download(bytes32)\":{\"params\":{\"fileHash\":\": Hash of the file to download.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFile(bytes32)\":{\"details\":\"Removes file with fileHash\",\"params\":{\"fileHash\":\": Hash of the file to remove. \"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFee(uint256,uint256)\":{\"details\":\"Resets fees \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upload(bytes32)\":{\"details\":\"Adds new file with fileHash\",\"params\":{\"fileHash\":\": Hash of the file to add. \"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"download(bytes32)\":{\"notice\":\"Download file\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DRythm.sol\":\"DRythm\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AbstractDRythm.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\nimport \\\"./interface/IDRythm.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\nabstract contract AbstractDRythm is Context, IERC20, IDRythm, IERC20Metadata {\\r\\n\\r\\n  mapping(address => Profile) private _balances;\\r\\n\\r\\n  mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n  uint256 private _totalSupply;\\r\\n\\r\\n  string private _name;\\r\\n  string private _symbol;\\r\\n\\r\\n  bool public isContextOf;\\r\\n\\r\\n  modifier modifyContext() {\\r\\n    isContextOf = true;\\r\\n    _;\\r\\n    isContextOf = false;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Sets the values for {name} and {symbol}.\\r\\n   *\\r\\n   * The default value of {decimals} is 18. To select a different value for\\r\\n   * {decimals} you should overload it.\\r\\n   *\\r\\n   * All two of these values are immutable: they can only be set once during\\r\\n   * construction.\\r\\n   */\\r\\n  constructor(string memory name_, string memory symbol_, address tokenTo, uint supply) {\\r\\n      _name = name_;\\r\\n      _symbol = symbol_;\\r\\n      isContextOf = false;\\r\\n      _mint(tokenTo, supply);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the name of the token.\\r\\n   */\\r\\n  function name() public view virtual override returns (string memory) {\\r\\n      return _name;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n   * name.\\r\\n   */\\r\\n  function symbol() public view virtual override returns (string memory) {\\r\\n      return _symbol;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns the number of decimals used to get its user representation.\\r\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n   * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n   *\\r\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n   * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n   * overridden;\\r\\n   *\\r\\n   * NOTE: This information is only used for _display_ purposes: it in\\r\\n   * no way affects any of the arithmetic of the contract, including\\r\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n   */\\r\\n  function decimals() public view virtual override returns (uint8) {\\r\\n      return 18;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {IERC20-totalSupply}.\\r\\n   */\\r\\n  function totalSupply() public view virtual override returns (uint256) {\\r\\n      return _totalSupply;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {IERC20-balanceOf}.\\r\\n   */\\r\\n  function balanceOf(address account) public view virtual override returns (uint256) {\\r\\n      return _balances[account].balance;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {IERC20-transfer}.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `to` cannot be the zero address.\\r\\n   * - the caller must have a balance of at least `amount`.\\r\\n   */\\r\\n  function transfer(address to, uint256 amount) public virtual override returns (bool) {\\r\\n      address owner = _msgSender();\\r\\n      _transfer(owner, to, amount);\\r\\n      return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {IERC20-allowance}.\\r\\n   */\\r\\n  function allowance(address owner, address spender) public view virtual override returns (uint256) {\\r\\n      return _allowances[owner][spender];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {IERC20-approve}.\\r\\n   *\\r\\n   * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n   * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `spender` cannot be the zero address.\\r\\n   */\\r\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\r\\n      address owner = _msgSender();\\r\\n      _approve(owner, spender, amount);\\r\\n      return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev See {IERC20-transferFrom}.\\r\\n   *\\r\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n   * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n   *\\r\\n   * NOTE: Does not update the allowance if the current allowance\\r\\n   * is the maximum `uint256`.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `from` and `to` cannot be the zero address.\\r\\n   * - `from` must have a balance of at least `amount`.\\r\\n   * - the caller must have allowance for ``from``'s tokens of at least\\r\\n   * `amount`.\\r\\n   */\\r\\n  function transferFrom(\\r\\n      address from,\\r\\n      address to,\\r\\n      uint256 amount\\r\\n  ) public virtual override returns (bool) {\\r\\n      address spender = _msgSender();\\r\\n      _spendAllowance(from, spender, amount);\\r\\n      _transfer(from, to, amount);\\r\\n      return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n   *\\r\\n   * This is an alternative to {approve} that can be used as a mitigation for\\r\\n   * problems described in {IERC20-approve}.\\r\\n   *\\r\\n   * Emits an {Approval} event indicating the updated allowance.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `spender` cannot be the zero address.\\r\\n   */\\r\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\r\\n      address owner = _msgSender();\\r\\n      _approve(owner, spender, allowance(owner, spender) + addedValue);\\r\\n      return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n   *\\r\\n   * This is an alternative to {approve} that can be used as a mitigation for\\r\\n   * problems described in {IERC20-approve}.\\r\\n   *\\r\\n   * Emits an {Approval} event indicating the updated allowance.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `spender` cannot be the zero address.\\r\\n   * - `spender` must have allowance for the caller of at least\\r\\n   * `subtractedValue`.\\r\\n   */\\r\\n  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\r\\n      address owner = _msgSender();\\r\\n      uint256 currentAllowance = allowance(owner, spender);\\r\\n      require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\r\\n      unchecked {\\r\\n          _approve(owner, spender, currentAllowance - subtractedValue);\\r\\n      }\\r\\n\\r\\n      return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n   *\\r\\n   * This internal function is equivalent to {transfer}, and can be used to\\r\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n   *\\r\\n   * Emits a {Transfer} event.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `from` cannot be the zero address.\\r\\n   * - `to` cannot be the zero address.\\r\\n   * - `from` must have a balance of at least `amount`.\\r\\n   */\\r\\n  function _transfer(\\r\\n      address from,\\r\\n      address to,\\r\\n      uint256 amount\\r\\n  ) internal virtual {\\r\\n      require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n      require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n      _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n      uint256 fromBalance = _balances[from].balance;\\r\\n      require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n      unchecked {\\r\\n          _balances[from].balance = fromBalance - amount;\\r\\n          // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n          // decrementing then incrementing.\\r\\n          _balances[to].balance += amount;\\r\\n      }\\r\\n\\r\\n      emit Transfer(from, to, amount);\\r\\n\\r\\n      _afterTokenTransfer(from, to, amount);\\r\\n  }\\r\\n\\r\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n   * the total supply.\\r\\n   *\\r\\n   * Emits a {Transfer} event with `from` set to the zero address.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `account` cannot be the zero address.\\r\\n   */\\r\\n  function _mint(address account, uint256 amount) private {\\r\\n      require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n      _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n      _totalSupply += amount;\\r\\n      unchecked {\\r\\n          // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n          _balances[account].balance += amount;\\r\\n      }\\r\\n      emit Transfer(address(0), account, amount);\\r\\n\\r\\n      _afterTokenTransfer(address(0), account, amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n   * total supply.\\r\\n   *\\r\\n   * Emits a {Transfer} event with `to` set to the zero address.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `account` cannot be the zero address.\\r\\n   * - `account` must have at least `amount` tokens.\\r\\n   */\\r\\n  function _burn(address account, uint256 amount) internal virtual {\\r\\n      require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n\\r\\n      _beforeTokenTransfer(account, address(0), amount);\\r\\n\\r\\n      uint256 accountBalance = _balances[account].balance;\\r\\n      require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n      unchecked {\\r\\n          _balances[account].balance = accountBalance - amount;\\r\\n          // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n          _totalSupply -= amount;\\r\\n      }\\r\\n\\r\\n      emit Transfer(account, address(0), amount);\\r\\n\\r\\n      _afterTokenTransfer(account, address(0), amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n   *\\r\\n   * This internal function is equivalent to `approve`, and can be used to\\r\\n   * e.g. set automatic allowances for certain subsystems, etc.\\r\\n   *\\r\\n   * Emits an {Approval} event.\\r\\n   *\\r\\n   * Requirements:\\r\\n   *\\r\\n   * - `owner` cannot be the zero address.\\r\\n   * - `spender` cannot be the zero address.\\r\\n   */\\r\\n  function _approve(\\r\\n      address owner,\\r\\n      address spender,\\r\\n      uint256 amount\\r\\n  ) internal virtual {\\r\\n      require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n      require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n      _allowances[owner][spender] = amount;\\r\\n      emit Approval(owner, spender, amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n   *\\r\\n   * Does not update the allowance amount in case of infinite allowance.\\r\\n   * Revert if not enough allowance is available.\\r\\n   *\\r\\n   * Might emit an {Approval} event.\\r\\n   */\\r\\n  function _spendAllowance(\\r\\n      address owner,\\r\\n      address spender,\\r\\n      uint256 amount\\r\\n  ) internal virtual {\\r\\n      uint256 currentAllowance = allowance(owner, spender);\\r\\n      if (currentAllowance != type(uint256).max) {\\r\\n          require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\r\\n          unchecked {\\r\\n              _approve(owner, spender, currentAllowance - amount);\\r\\n          }\\r\\n      }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Hook that is called before any transfer of tokens. This includes\\r\\n   * minting and burning.\\r\\n   *\\r\\n   * Calling conditions:\\r\\n   *\\r\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n   * will be transferred to `to`.\\r\\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n   * - `from` and `to` are never both zero.\\r\\n   *\\r\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n   */\\r\\n  function _beforeTokenTransfer(\\r\\n      address from,\\r\\n      address to,\\r\\n      uint256 amount\\r\\n  ) internal virtual {}\\r\\n\\r\\n  /**\\r\\n   * @dev Hook that is called after any transfer of tokens. This includes\\r\\n   * minting and burning.\\r\\n   *\\r\\n   * Calling conditions:\\r\\n   *\\r\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n   * has been transferred to `to`.\\r\\n   * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n   * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n   * - `from` and `to` are never both zero.\\r\\n   *\\r\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n   */\\r\\n  function _afterTokenTransfer(\\r\\n      address from,\\r\\n      address to,\\r\\n      uint256 amount\\r\\n  ) internal virtual {}\\r\\n\\r\\n  function _getProfile(address who) internal view returns(Profile memory _return) {\\r\\n    _return = _balances[who];\\r\\n  }\\r\\n\\r\\n  function _updateProfile(bool isUploader, address who) internal {\\r\\n    if(!isContextOf) revert OnlyInContextOfUpload();\\r\\n    _balances[who].isUploader = isUploader;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x869df245f96846fe436b9a65536fb4a3c84cf4152c69c93fe7182f1f1e7543e3\",\"license\":\"MIT\"},\"contracts/DRythm.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"./AbstractDRythm.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\r\\n * tokens and those that they have an allowance for, in a way that can be\\r\\n * recognized off-chain (via event analysis).\\r\\n */\\r\\ncontract DRythm is Context, AbstractDRythm, Ownable {\\r\\n\\r\\n  UploadData private pData;\\r\\n\\r\\n  address feeTo;\\r\\n\\r\\n  // Check for conditions that must evaluate to true before proceeding to executions\\r\\n  modifier conditionsMustbeTrue(bool isFileUploaded, string memory errorMessage) {\\r\\n    require(_getProfile(_msgSender()).isUploader, \\\"UserNeedPriorApproval\\\");\\r\\n    if(!isFileUploaded) revert FileError(errorMessage);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  constructor (address _feeTo) \\r\\n    AbstractDRythm(\\r\\n      \\\"RYM Token\\\",\\r\\n      \\\"RYM\\\",\\r\\n      _msgSender(),\\r\\n      50_000_000 * (10 ** 18)\\r\\n    ) \\r\\n  {\\r\\n    if(_feeTo == address(0)) revert FeeToIsZeroAddress(_feeTo);\\r\\n    feeTo = _feeTo;\\r\\n  }\\r\\n\\r\\n  receive() external payable {\\r\\n    Address.sendValue(payable(feeTo), msg.value);\\r\\n  }\\r\\n\\r\\n\\r\\n  /**@dev Adds new file with fileHash\\r\\n   * @param fileHash : Hash of the file to add.\\r\\n   * \\r\\n   */\\r\\n  function upload(bytes32 fileHash) \\r\\n    external\\r\\n    conditionsMustbeTrue(\\r\\n      pData.fileIndexes[fileHash].isUploaded == false,\\r\\n      \\\"File exist\\\"\\r\\n    ) \\r\\n    modifyContext \\r\\n    returns(bool) \\r\\n  {\\r\\n    _takeFee(_msgSender(), pData.uploadFee);\\r\\n    uint fileIndex = pData.files.length;\\r\\n    pData.files.push(Data(block.timestamp, 0, _msgSender()));\\r\\n    pData.fileIndexes[fileHash] = FileStatus(true, fileIndex);\\r\\n\\r\\n    emit FileAdded(fileHash, _msgSender());\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**@dev Removes file with fileHash\\r\\n   * @param fileHash : Hash of the file to remove.\\r\\n   * \\r\\n   */\\r\\n  function removeFile(bytes32 fileHash) \\r\\n    external\\r\\n    returns (bool _return) \\r\\n  {\\r\\n    if(!pData.fileIndexes[fileHash].isUploaded) revert FileError(\\\"File not exist\\\");\\r\\n    _takeFee(_msgSender(), pData.removalFee);\\r\\n    _return = pData.fileIndexes[fileHash].isUploaded;\\r\\n    delete pData.files[_findIndex(fileHash)];\\r\\n    delete pData.fileIndexes[fileHash];\\r\\n\\r\\n    emit FileRemoved(fileHash, _msgSender());\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**@notice Download file\\r\\n   * @param fileHash : Hash of the file to download.\\r\\n   */\\r\\n  function download(bytes32 fileHash) \\r\\n    external \\r\\n    returns(bool)\\r\\n  {\\r\\n    if(!pData.fileIndexes[fileHash].isUploaded) revert FileError(\\\"File not exist\\\");\\r\\n    _takeFee(_msgSender(), pData.downloadFee);\\r\\n    \\r\\n    pData.files[_findIndex(fileHash)].downloadCount ++;\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  function approveUploader(address who) public modifyContext onlyOwner {\\r\\n    require(!_getProfile(who).isUploader, \\\"AlreadyApproved\\\");\\r\\n    _updateProfile(true, who);\\r\\n  }\\r\\n\\r\\n  function removeUploader(address who) public modifyContext onlyOwner {\\r\\n    require(_getProfile(who).isUploader, \\\"AlreadyRemoved\\\");\\r\\n    _updateProfile(false, who);\\r\\n  }\\r\\n\\r\\n  ///@dev Searches and return file index for fileHash\\r\\n  function _findIndex(bytes32 fileHash) internal view returns(uint _return) {\\r\\n    _return = pData.fileIndexes[fileHash].index;\\r\\n  }\\r\\n\\r\\n  // Deduct and burn fee\\r\\n  function _takeFee(address who, uint fee) private {\\r\\n    _burn(who, fee);\\r\\n  }\\r\\n\\r\\n  ///@dev Resets fees \\r\\n  function setFee(uint removalFee, uint uploadFee) public onlyOwner {\\r\\n    pData.removalFee = removalFee;\\r\\n    pData.uploadFee = uploadFee;\\r\\n  }\\r\\n\\r\\n  function getFiles() public view returns (Data[] memory _return) {\\r\\n    _return = pData.files;\\r\\n    return _return;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x4f7aa7ea767c9b84482c7b8a9f75ddec16fc8e1b3b572aaa180d548d83a09b22\",\"license\":\"MIT\"},\"contracts/interface/IDRythm.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\ninterface IDRythm {\\r\\n  error FileError(string);\\r\\n  error FileNotExist(bytes32);\\r\\n  error OnlyInContextOfUpload();\\r\\n  error FeeToIsZeroAddress(address);\\r\\n  event FileAdded(bytes32, address);\\r\\n  event FileRemoved(bytes32, address);\\r\\n\\r\\n  struct UploadData {\\r\\n    uint uploadFee;\\r\\n    uint removalFee;\\r\\n    uint downloadFee;\\r\\n    Data[] files;\\r\\n    mapping(bytes32 => FileStatus) fileIndexes;\\r\\n  }\\r\\n\\r\\n  struct FileStatus {\\r\\n    bool isUploaded;\\r\\n    uint index;\\r\\n  }\\r\\n\\r\\n  struct  Data {\\r\\n    uint dateUploaded;\\r\\n    uint downloadCount;\\r\\n    address uploader;\\r\\n  }\\r\\n\\r\\n  struct Profile {\\r\\n    bool isUploader;\\r\\n    uint256 balance;\\r\\n  }\\r\\n\\r\\n\\r\\n  function upload(bytes32 fileHash) external returns(bool);\\r\\n  function download(bytes32 fileHash) external returns(bool);\\r\\n  function removeFile(bytes32 fileHash) external returns (bool);\\r\\n}\",\"keccak256\":\"0xbae654d3f82f28963873ee7752acfb8de79ce4bb674145d07b6e902bf88ac304\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610156576000357c01000000000000000000000000000000000000000000000000000000009004806367971080116100c8578063a457c2d71161008c578063a457c2d7146103a3578063a4746af6146103c3578063a9059cbb146103e3578063dd62ed3e14610403578063f2fde38b14610423578063fa0438a91461044357600080fd5b806367971080146102ea57806370a082311461030a578063715018a6146103435780638da5cb5b1461035857806395d89b411461038e57600080fd5b806323b872dd1161011a57806323b872dd1461022c5780632da96d731461024c578063313ce5671461026e578063395093511461028a57806339a88307146102aa57806352f7c988146102ca57600080fd5b806306fdde0314610178578063095ea7b3146101a35780630bef429b146101d357806318160ddd146101f35780631dc3a0121461021257600080fd5b3661017357600b5461017190600160a060020a031634610463565b005b600080fd5b34801561018457600080fd5b5061018d61058d565b60405161019a91906114e9565b60405180910390f35b3480156101af57600080fd5b506101c36101be366004611553565b61061f565b604051901515815260200161019a565b3480156101df57600080fd5b506101c36101ee36600461157d565b610639565b3480156101ff57600080fd5b506002545b60405190815260200161019a565b34801561021e57600080fd5b506005546101c39060ff1681565b34801561023857600080fd5b506101c3610247366004611596565b610791565b34801561025857600080fd5b506102616107b5565b60405161019a91906115d2565b34801561027a57600080fd5b506040516012815260200161019a565b34801561029657600080fd5b506101c36102a5366004611553565b61083a565b3480156102b657600080fd5b506101716102c5366004611634565b61085c565b3480156102d657600080fd5b506101716102e5366004611656565b6108e2565b3480156102f657600080fd5b506101c361030536600461157d565b6108f5565b34801561031657600080fd5b50610204610325366004611634565b600160a060020a031660009081526020819052604090206001015490565b34801561034f57600080fd5b50610171610b3f565b34801561036457600080fd5b506005546101009004600160a060020a0316604051600160a060020a03909116815260200161019a565b34801561039a57600080fd5b5061018d610b53565b3480156103af57600080fd5b506101c36103be366004611553565b610b62565b3480156103cf57600080fd5b506101c36103de36600461157d565b610bf8565b3480156103ef57600080fd5b506101c36103fe366004611553565b610ccc565b34801561040f57600080fd5b5061020461041e366004611678565b610cda565b34801561042f57600080fd5b5061017161043e366004611634565b610d05565b34801561044f57600080fd5b5061017161045e366004611634565b610d98565b30318111156104bc5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b600082600160a060020a03168260405160006040518083038185875af1925050503d8060008114610509576040519150601f19603f3d011682016040523d82523d6000602084013e61050e565b606091505b50509050806105885760405160e560020a62461bcd02815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104b3565b505050565b60606003805461059c906116ab565b80601f01602080910402602001604051908101604052809291908181526020018280546105c8906116ab565b80156106155780601f106105ea57610100808354040283529160200191610615565b820191906000526020600020905b8154815290600101906020018083116105f857829003601f168201915b5050505050905090565b60003361062d818585610e12565b60019150505b92915050565b6000818152600a602052604081205460ff166106b1576040517ff89316dd00000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f46696c65206e6f7420657869737400000000000000000000000000000000000060448201526064016104b3565b6106bd33600754610f70565b506000818152600a60205260409020805460019091015460ff90911690600990815481106106ed576106ed6116fe565b60009182526020808320600390920290910182815560018082018490556002909101805473ffffffffffffffffffffffffffffffffffffffff19169055848352600a90915260408220805460ff1916815501557f7be12496ae22d3d9a9e65382c3ecfe9066f06c542a3a22dd9c9c2deb159de645826107693390565b60408051928352600160a060020a0390911660208301520160405180910390a1506001919050565b60003361079f858285610f7e565b6107aa858585610ffb565b506001949350505050565b60606006600301805480602002602001604051908101604052809291908181526020016000905b8282101561083157600084815260209081902060408051606081018252600386029092018054835260018082015484860152600290910154600160a060020a03169183019190915290835290920191016107dc565b50505050905090565b60003361062d81858561084d8383610cda565b610857919061175c565b610e12565b6005805460ff191660011790556108716111fb565b61087a8161125e565b516108ca5760405160e560020a62461bcd02815260206004820152600e60248201527f416c726561647952656d6f76656400000000000000000000000000000000000060448201526064016104b3565b6108d56000826112a8565b506005805460ff19169055565b6108ea6111fb565b600791909155600655565b6000818152600a602081815260408084205481518083019092529281527f46696c65206578697374000000000000000000000000000000000000000000009181019190915260ff909116159061094a3361125e565b5161099a5760405160e560020a62461bcd02815260206004820152601560248201527f557365724e6565645072696f72417070726f76616c000000000000000000000060448201526064016104b3565b816109d357806040517ff89316dd0000000000000000000000000000000000000000000000000000000081526004016104b391906114e9565b6005805460ff191660011790556109f26109ea3390565b600654610f70565b6009805460408051606081018252428152600060208083018281523384860181815260018089018a5598855294517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af600389029081019190915591517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b083015593517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055835180850185528681528082018681528b8452600a8352928590209051815460ff191690151517815591519190950155815188815293840152805191927f83b278ee008fb23dd64632b98e20e959d6cbfe6133838a9bdcd6c13bd5646fab929081900390910190a150506005805460ff1916905550600192915050565b610b476111fb565b610b51600061130c565b565b60606004805461059c906116ab565b60003381610b708286610cda565b905083811015610beb5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016104b3565b6107aa8286868403610e12565b6000818152600a602052604081205460ff16610c70576040517ff89316dd00000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f46696c65206e6f7420657869737400000000000000000000000000000000000060448201526064016104b3565b610c7c33600854610f70565b6000828152600a602052604090206001015460099081548110610ca157610ca16116fe565b600091825260208220600160039092020101805491610cbf8361176f565b9091555060019392505050565b60003361062d818585610ffb565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b610d0d6111fb565b600160a060020a038116610d8c5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104b3565b610d958161130c565b50565b6005805460ff19166001179055610dad6111fb565b610db68161125e565b5115610e075760405160e560020a62461bcd02815260206004820152600f60248201527f416c7265616479417070726f766564000000000000000000000000000000000060448201526064016104b3565b6108d56001826112a8565b600160a060020a038316610e905760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104b3565b600160a060020a038216610f0f5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104b3565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b610f7a8282611373565b5050565b6000610f8a8484610cda565b90506000198114610ff55781811015610fe85760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104b3565b610ff58484848403610e12565b50505050565b600160a060020a03831661107a5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104b3565b600160a060020a0382166110f95760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104b3565b600160a060020a0383166000908152602081905260409020600101548181101561118e5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104b3565b600160a060020a0384811660008181526020818152604080832087870360019182015594881680845292819020909401805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610ff5565b600554600160a060020a03610100909104163314610b515760405160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b604080518082019091526000808252602082015250600160a060020a0316600090815260208181526040918290208251808401909352805460ff1615158352600101549082015290565b60055460ff166112e4576040517fafbbbf1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160a060020a03166000908152602081905260409020805460ff1916911515919091179055565b60058054600160a060020a0383811661010081810274ffffffffffffffffffffffffffffffffffffffff001985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600160a060020a0382166113f25760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104b3565b600160a060020a038216600090815260208190526040902060010154818110156114875760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016104b3565b600160a060020a038316600081815260208181526040808320868603600190910155600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b81811015611516578581018301518582016040015282016114fa565b506000604082860101526040601f19601f8301168501019250505092915050565b8035600160a060020a038116811461154e57600080fd5b919050565b6000806040838503121561156657600080fd5b61156f83611537565b946020939093013593505050565b60006020828403121561158f57600080fd5b5035919050565b6000806000606084860312156115ab57600080fd5b6115b484611537565b92506115c260208501611537565b9150604084013590509250925092565b602080825282518282018190526000919060409081850190868401855b82811015611627578151805185528681015187860152850151600160a060020a031685850152606090930192908501906001016115ef565b5091979650505050505050565b60006020828403121561164657600080fd5b61164f82611537565b9392505050565b6000806040838503121561166957600080fd5b50508035926020909101359150565b6000806040838503121561168b57600080fd5b61169483611537565b91506116a260208401611537565b90509250929050565b6002810460018216806116bf57607f821691505b6020821081036116f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156106335761063361172d565b6000600182016117815761178161172d565b506001019056fea26469706673582212206431cad875533891f018c2f7557f9bdfbb8198364f8f23e14a30453264e38c3f64736f6c63430008110033",
  "devdoc": {
    "details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "download(bytes32)": {
        "params": {
          "fileHash": ": Hash of the file to download."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeFile(bytes32)": {
        "details": "Removes file with fileHash",
        "params": {
          "fileHash": ": Hash of the file to remove. "
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFee(uint256,uint256)": {
        "details": "Resets fees "
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upload(bytes32)": {
        "details": "Adds new file with fileHash",
        "params": {
          "fileHash": ": Hash of the file to add. "
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "download(bytes32)": {
        "notice": "Download file"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 587,
        "contract": "contracts/DRythm.sol:DRythm",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Profile)1658_storage)"
      },
      {
        "astId": 593,
        "contract": "contracts/DRythm.sol:DRythm",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 595,
        "contract": "contracts/DRythm.sol:DRythm",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 597,
        "contract": "contracts/DRythm.sol:DRythm",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 599,
        "contract": "contracts/DRythm.sol:DRythm",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 601,
        "contract": "contracts/DRythm.sol:DRythm",
        "label": "isContextOf",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 7,
        "contract": "contracts/DRythm.sol:DRythm",
        "label": "_owner",
        "offset": 1,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1244,
        "contract": "contracts/DRythm.sol:DRythm",
        "label": "pData",
        "offset": 0,
        "slot": "6",
        "type": "t_struct(UploadData)1641_storage"
      },
      {
        "astId": 1246,
        "contract": "contracts/DRythm.sol:DRythm",
        "label": "feeTo",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Data)1653_storage)dyn_storage": {
        "base": "t_struct(Data)1653_storage",
        "encoding": "dynamic_array",
        "label": "struct IDRythm.Data[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Profile)1658_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IDRythm.Profile)",
        "numberOfBytes": "32",
        "value": "t_struct(Profile)1658_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(FileStatus)1646_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct IDRythm.FileStatus)",
        "numberOfBytes": "32",
        "value": "t_struct(FileStatus)1646_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Data)1653_storage": {
        "encoding": "inplace",
        "label": "struct IDRythm.Data",
        "members": [
          {
            "astId": 1648,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "dateUploaded",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1650,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "downloadCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1652,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "uploader",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(FileStatus)1646_storage": {
        "encoding": "inplace",
        "label": "struct IDRythm.FileStatus",
        "members": [
          {
            "astId": 1643,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "isUploaded",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1645,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "index",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Profile)1658_storage": {
        "encoding": "inplace",
        "label": "struct IDRythm.Profile",
        "members": [
          {
            "astId": 1655,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "isUploader",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1657,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(UploadData)1641_storage": {
        "encoding": "inplace",
        "label": "struct IDRythm.UploadData",
        "members": [
          {
            "astId": 1627,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "uploadFee",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1629,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "removalFee",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1631,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "downloadFee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1635,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "files",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(Data)1653_storage)dyn_storage"
          },
          {
            "astId": 1640,
            "contract": "contracts/DRythm.sol:DRythm",
            "label": "fileIndexes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(FileStatus)1646_storage)"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}